// Code generated by protoc-gen-go. DO NOT EDIT.
// source: format.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Indicate the status of RPC response
type RpcStatus int32

const (
	// if RPC layer was ok or any error in RPC and not application error
	RpcStatus_OK    RpcStatus = 0
	RpcStatus_ERROR RpcStatus = 1
)

var RpcStatus_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}

var RpcStatus_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x RpcStatus) String() string {
	return proto.EnumName(RpcStatus_name, int32(x))
}

func (RpcStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9d9ed1f28583505e, []int{0}
}

type RpcRequestHeader struct {
	MethodName           string   `protobuf:"bytes,1,opt,name=MethodName,proto3" json:"MethodName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcRequestHeader) Reset()         { *m = RpcRequestHeader{} }
func (m *RpcRequestHeader) String() string { return proto.CompactTextString(m) }
func (*RpcRequestHeader) ProtoMessage()    {}
func (*RpcRequestHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d9ed1f28583505e, []int{0}
}

func (m *RpcRequestHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcRequestHeader.Unmarshal(m, b)
}
func (m *RpcRequestHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcRequestHeader.Marshal(b, m, deterministic)
}
func (m *RpcRequestHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcRequestHeader.Merge(m, src)
}
func (m *RpcRequestHeader) XXX_Size() int {
	return xxx_messageInfo_RpcRequestHeader.Size(m)
}
func (m *RpcRequestHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcRequestHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RpcRequestHeader proto.InternalMessageInfo

func (m *RpcRequestHeader) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

type RpcResponseHeader struct {
	Status RpcStatus `protobuf:"varint,1,opt,name=Status,proto3,enum=rpc.RpcStatus" json:"Status,omitempty"`
	// Return if any rpc error or application error
	Error                string   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcResponseHeader) Reset()         { *m = RpcResponseHeader{} }
func (m *RpcResponseHeader) String() string { return proto.CompactTextString(m) }
func (*RpcResponseHeader) ProtoMessage()    {}
func (*RpcResponseHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d9ed1f28583505e, []int{1}
}

func (m *RpcResponseHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcResponseHeader.Unmarshal(m, b)
}
func (m *RpcResponseHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcResponseHeader.Marshal(b, m, deterministic)
}
func (m *RpcResponseHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcResponseHeader.Merge(m, src)
}
func (m *RpcResponseHeader) XXX_Size() int {
	return xxx_messageInfo_RpcResponseHeader.Size(m)
}
func (m *RpcResponseHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcResponseHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RpcResponseHeader proto.InternalMessageInfo

func (m *RpcResponseHeader) GetStatus() RpcStatus {
	if m != nil {
		return m.Status
	}
	return RpcStatus_OK
}

func (m *RpcResponseHeader) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// Message on the wire
type RpcMessage struct {
	RpcId int64 `protobuf:"varint,1,opt,name=RpcId,proto3" json:"RpcId,omitempty"`
	// Types that are valid to be assigned to RpcHeader:
	//	*RpcMessage_RequestHeader
	//	*RpcMessage_ResponseHeader
	RpcHeader            isRpcMessage_RpcHeader `protobuf_oneof:"RpcHeader"`
	Payload              *any.Any               `protobuf:"bytes,4,opt,name=Payload,proto3" json:"Payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RpcMessage) Reset()         { *m = RpcMessage{} }
func (m *RpcMessage) String() string { return proto.CompactTextString(m) }
func (*RpcMessage) ProtoMessage()    {}
func (*RpcMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d9ed1f28583505e, []int{2}
}

func (m *RpcMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcMessage.Unmarshal(m, b)
}
func (m *RpcMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcMessage.Marshal(b, m, deterministic)
}
func (m *RpcMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcMessage.Merge(m, src)
}
func (m *RpcMessage) XXX_Size() int {
	return xxx_messageInfo_RpcMessage.Size(m)
}
func (m *RpcMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RpcMessage proto.InternalMessageInfo

func (m *RpcMessage) GetRpcId() int64 {
	if m != nil {
		return m.RpcId
	}
	return 0
}

type isRpcMessage_RpcHeader interface {
	isRpcMessage_RpcHeader()
}

type RpcMessage_RequestHeader struct {
	RequestHeader *RpcRequestHeader `protobuf:"bytes,2,opt,name=RequestHeader,proto3,oneof"`
}

type RpcMessage_ResponseHeader struct {
	ResponseHeader *RpcResponseHeader `protobuf:"bytes,3,opt,name=ResponseHeader,proto3,oneof"`
}

func (*RpcMessage_RequestHeader) isRpcMessage_RpcHeader() {}

func (*RpcMessage_ResponseHeader) isRpcMessage_RpcHeader() {}

func (m *RpcMessage) GetRpcHeader() isRpcMessage_RpcHeader {
	if m != nil {
		return m.RpcHeader
	}
	return nil
}

func (m *RpcMessage) GetRequestHeader() *RpcRequestHeader {
	if x, ok := m.GetRpcHeader().(*RpcMessage_RequestHeader); ok {
		return x.RequestHeader
	}
	return nil
}

func (m *RpcMessage) GetResponseHeader() *RpcResponseHeader {
	if x, ok := m.GetRpcHeader().(*RpcMessage_ResponseHeader); ok {
		return x.ResponseHeader
	}
	return nil
}

func (m *RpcMessage) GetPayload() *any.Any {
	if m != nil {
		return m.Payload
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RpcMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RpcMessage_RequestHeader)(nil),
		(*RpcMessage_ResponseHeader)(nil),
	}
}

func init() {
	proto.RegisterEnum("rpc.RpcStatus", RpcStatus_name, RpcStatus_value)
	proto.RegisterType((*RpcRequestHeader)(nil), "rpc.RpcRequestHeader")
	proto.RegisterType((*RpcResponseHeader)(nil), "rpc.RpcResponseHeader")
	proto.RegisterType((*RpcMessage)(nil), "rpc.RpcMessage")
}

func init() { proto.RegisterFile("format.proto", fileDescriptor_9d9ed1f28583505e) }

var fileDescriptor_9d9ed1f28583505e = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xd1, 0x4a, 0xfb, 0x30,
	0x18, 0xc5, 0xd7, 0xed, 0xbf, 0xfd, 0xe9, 0x37, 0x2d, 0x35, 0x4c, 0xa9, 0x5e, 0x0c, 0xe9, 0x85,
	0x88, 0x17, 0x19, 0xd4, 0x6b, 0x41, 0x85, 0x41, 0x45, 0xe6, 0xf4, 0xf3, 0x09, 0xb2, 0x34, 0xab,
	0x17, 0x5b, 0x13, 0x93, 0xf4, 0xa2, 0x6f, 0xeb, 0xa3, 0x88, 0x49, 0x8b, 0xab, 0x97, 0xdf, 0x39,
	0xe7, 0x77, 0x12, 0x0e, 0x1c, 0x6d, 0xa5, 0xde, 0x33, 0x4b, 0x95, 0x96, 0x56, 0x92, 0x91, 0x56,
	0xfc, 0xe2, 0xbc, 0x94, 0xb2, 0xdc, 0x89, 0x85, 0x93, 0x36, 0xf5, 0x76, 0xc1, 0xaa, 0xc6, 0xfb,
	0x69, 0x06, 0x31, 0x2a, 0x8e, 0xe2, 0xb3, 0x16, 0xc6, 0xe6, 0x82, 0x15, 0x42, 0x93, 0x39, 0xc0,
	0x4a, 0xd8, 0x0f, 0x59, 0xbc, 0xb0, 0xbd, 0x48, 0x82, 0xcb, 0xe0, 0x3a, 0xc4, 0x03, 0x25, 0x7d,
	0x83, 0x13, 0xc7, 0x18, 0x25, 0x2b, 0x23, 0x5a, 0xe8, 0x0a, 0x26, 0xef, 0x96, 0xd9, 0xda, 0x38,
	0x20, 0xca, 0x22, 0xaa, 0x15, 0xa7, 0xa8, 0xb8, 0x57, 0xb1, 0x75, 0xc9, 0x0c, 0xc6, 0x4b, 0xad,
	0xa5, 0x4e, 0x86, 0xae, 0xd7, 0x1f, 0xe9, 0x57, 0x00, 0x80, 0x8a, 0xaf, 0x84, 0x31, 0xac, 0x14,
	0x3f, 0x21, 0x54, 0xfc, 0xa9, 0x70, 0x5d, 0x23, 0xf4, 0x07, 0xb9, 0x83, 0xe3, 0xde, 0x47, 0x5d,
	0xc5, 0x34, 0x3b, 0xed, 0x5e, 0xea, 0x99, 0xf9, 0x00, 0xfb, 0x69, 0x72, 0x0f, 0x51, 0xff, 0xcf,
	0xc9, 0xc8, 0xf1, 0x67, 0xbf, 0xfc, 0xa1, 0x9b, 0x0f, 0xf0, 0x4f, 0x9e, 0x50, 0xf8, 0xff, 0xca,
	0x9a, 0x9d, 0x64, 0x45, 0xf2, 0xcf, 0xa1, 0x33, 0xea, 0x97, 0xa5, 0xdd, 0xb2, 0xf4, 0xa1, 0x6a,
	0xb0, 0x0b, 0x3d, 0x4e, 0x21, 0x44, 0xc5, 0x3d, 0x7c, 0x33, 0x77, 0x47, 0xbb, 0xc2, 0x04, 0x86,
	0xeb, 0xe7, 0x78, 0x40, 0x42, 0x18, 0x2f, 0x11, 0xd7, 0x18, 0x07, 0x9b, 0x89, 0xeb, 0xb8, 0xfd,
	0x0e, 0x00, 0x00, 0xff, 0xff, 0x4e, 0xeb, 0xcf, 0xba, 0xc0, 0x01, 0x00, 0x00,
}
